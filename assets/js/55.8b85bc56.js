(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{367:function(s,t,a){"use strict";a.r(t);var n=a(7),r=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[t("img",{attrs:{src:"https://b3logfile.com/bing/20190606.jpg?imageView2/1/w/960/h/540/interlace/1/q/100",alt:""}})]),s._v(" "),t("p",[s._v("安装:pip install supervisor")]),s._v(" "),t("p",[s._v("默认配置文件位置:/etc/supervisord.conf")]),s._v(" "),t("p",[s._v("默认自定义进程管理配置文件位置:/etc/supervisord.d")]),s._v(" "),t("p",[s._v("自定义需要管理的进程配置文件后缀:ini")]),s._v(" "),t("p",[s._v("一个示例配置文件:")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("项目名\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("program:xxx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("脚本目录\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("directory")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/xxx\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("脚本执行命令\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("command")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("python3 xxx.py\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("supervisor启动的时候是否随着同时启动，默认True\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("autostart")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("当程序exit的时候，这个program不会自动重启,默认unexpected，设置子进程挂掉后自动重启的情况，有三个选项，false,unexpected 和true。如果为false的时候，无论什么情况下，都不会被重新启动，如果为unexpected，只有当进程的退出码不在下面的exitcodes里面定义的\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("autorestart")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("这个选项是子进程启动多少秒之后，此时状态如果是running，则我们认为启动成功了。默认值为1\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("startsecs")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("脚本运行的用户身份\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("user")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("xxx\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("日志输出\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stderr_logfile")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/tmp/xxx_stderr.log\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stdout_logfile")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/tmp/xxx_stdout.log\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("把stderr重定向到stdout，默认 "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\nredirect_stderr "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("stdout日志文件大小，默认 50MB\nstdout_logfile_maxbytes "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 50MB\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("stdout日志文件备份数\nstdout_logfile_backups "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br")])]),t("p",[s._v("进程管理常用命令:")]),s._v(" "),t("p",[s._v("启动supervisord服务:supervisord -c /etc/supervisord.conf")]),s._v(" "),t("p",[s._v("supervisorctl help # 查看帮助\nsupervisorctl status # 查看程序状态\nsupervisorctl stop program_name # 关闭指定的程序\nsupervisorctl start program_name # 启动指定的程序\nsupervisorctl restart program_name # 重启指定的程序\nsupervisorctl tail -f program_name # 查看该程序的日志\nsupervisorctl update # 重启配置文件修改过的程序")]),s._v(" "),t("p",[s._v("supervisorctl reload #重新载入配置的进程")]),s._v(" "),t("p",[s._v("欢迎交流!")])])}),[],!1,null,null,null);t.default=r.exports}}]);